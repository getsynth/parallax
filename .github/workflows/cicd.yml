name: parallax ci/cd

on:
  push:
    branches:
    - master

jobs:
  build_and_deploy_parallax_images:
    runs-on: ubuntu-latest
    env:
      toolchain: "nightly-2020-05-15"
    steps:
    - name: Install Protoc
      uses: arduino/setup-protoc@master
    - uses: actions/checkout@v2
      with:
        submodules: "recursive"
    - name: Install nightly
      run: rustup toolchain install ${{ env.toolchain }}
    - name: Install rustfmt
      run: rustup component add rustfmt --toolchain ${{ env.toolchain }}
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '285.0.0'
        project_id: ${{ secrets.OPENQUERY_CI_PROJECT_ID }}
        service_account_email: ${{ secrets.OPENQUERY_CI_SERVICE_ACCOUNT_EMAIL }}
        service_account_key: ${{ secrets.OPENQUERY_CI_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
    - name: Configure docker with GCP auth helper
      run: gcloud --quiet auth configure-docker
    - name: Build workspace
      run: cargo +${{ env.toolchain }} build
    - name: Build minimal image
      run: |
        docker build -f docker/Dockerfile.minimal \
                     --build-arg TARGET=debug \
                     -t eu.gcr.io/${{ secrets.OPENQUERY_CI_PROJECT_ID }}/parallax:minimal-${GITHUB_SHA} \
                     .
    - name: Push minimal image
      run: docker push eu.gcr.io/${{ secrets.OPENQUERY_CI_PROJECT_ID }}/parallax:minimal-${GITHUB_SHA}
    - name: Build complete image
      run: |
        docker build -f docker/Dockerfile.complete \
                     --build-arg TARGET=debug \
                     -t eu.gcr.io/${{ secrets.OPENQUERY_CI_PROJECT_ID }}/parallax:${GITHUB_SHA} \
                     -t eu.gcr.io/${{ secrets.OPENQUERY_CI_PROJECT_ID }}/parallax \
                     .
    - name: Push complete image
      run: |
        docker push eu.gcr.io/${{ secrets.OPENQUERY_CI_PROJECT_ID }}/parallax:${GITHUB_SHA}
        docker push eu.gcr.io/${{ secrets.OPENQUERY_CI_PROJECT_ID }}/parallax
